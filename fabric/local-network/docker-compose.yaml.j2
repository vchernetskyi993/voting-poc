version: "3.7"

networks:
  local:
    name: voting_fabric

{# TODO: split template #}

services:
{% for org in orgs.values() %}
  {{ org.key }}_ca_initializer:
    build:
      dockerfile: Dockerfile.alpine
    labels:
      service: hyperledger-fabric
    environment:
      - CA_USER=${ {{- org.key.upper() }}_CA_USER}
      - CA_PASSWORD=${ {{- org.key.upper() }}_CA_PASSWORD}
    command: sh -c "
      envsubst 
        < /config/{{ org.key }}-ca-server-config.yaml 
        \> /etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml"
    volumes:
      - ./data/{{ org.key }}/ca:/etc/hyperledger/fabric-ca-server
      - ./config/ca:/config
    container_name: {{ org.key }}_ca_initializer
    networks:
      - local

  ca.{{ org.key }}:
    image: hyperledger/fabric-ca:1.5.4
    labels:
      service: hyperledger-fabric
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_OPERATIONS_LISTENADDRESS=0.0.0.0:17054
    ports:
      - "{{ org.ca_port }}:7054"
      - "1{{ org.ca_port }}:17054"
    command: sh -c 'fabric-ca-server start -d'
    volumes:
      - ./data/{{ org.key }}/ca:/etc/hyperledger/fabric-ca-server
    container_name: ca.{{ org.key }}
    networks:
      - local
    depends_on: 
      - {{ org.key }}_ca_initializer

{% if not org.keystores_initialized %}
  {{ org.key }}_nodes_initializer:
    build:
      dockerfile: Dockerfile.alpine
    environment:
      - FABRIC_CA_CLIENT_HOME=/data/{{ org.key }}/ca-client
      - FABRIC_BIN_PATH=/fabric/bin
      - ORG={{ org.key }}
      - CA_USER=${ {{- org.key.upper() }}_CA_USER}
      - CA_PASSWORD=${ {{- org.key.upper() }}_CA_PASSWORD}
      - ADMIN_USER=${ {{- org.key.upper() }}_ADMIN_USER}
      - ADMIN_PASSWORD=${ {{- org.key.upper() }}_ADMIN_PASSWORD}
      - SHOULD_ENROLL_ORDERER={{ "true" if org.key == "gov" else "false" }}
      - ORDERER_USER=${ {{- org.key.upper() }}_ORDERER_USER}
      - ORDERER_PASSWORD=${ {{- org.key.upper() }}_ORDERER_PASSWORD}
      - PEER_USER=${ {{- org.key.upper() }}_PEER_USER}
      - PEER_PASSWORD=${ {{- org.key.upper() }}_PEER_PASSWORD}
    command: sh -c '/shell/enroll-org.sh'
    volumes:
      - ./data:/data
      - ./shell:/shell
      - ${FABRIC_BIN_PATH}:/fabric/bin
    container_name: {{ org.key }}_nodes_initializer
    networks:
      - local
    depends_on: 
      - ca.{{ org.key }}
{% endif %}

{% if org.key == "gov" %}
  orderer.gov:
    container_name: orderer.gov
    image: hyperledger/fabric-orderer:2.4.4
    labels:
      service: hyperledger-fabric
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_LOCALMSPID=Government
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=none
      - ORDERER_CHANNELPARTICIPATION_ENABLED=true
      - ORDERER_ADMIN_TLS_ENABLED=true
      - ORDERER_ADMIN_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_ADMIN_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_ADMIN_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_TLS_CLIENTROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_LISTENADDRESS=orderer.gov:7053
      - ORDERER_OPERATIONS_LISTENADDRESS=orderer.gov:9443
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /root
    command: sh -c 'DATA_PATH=/var/hyperledger/orderer COMMAND=orderer /start-node.sh'
    volumes:
      - ./shell/start-node.sh:/start-node.sh
      - ./data/gov/orderer:/var/hyperledger/orderer
      - ./data/gov/orderer/production:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
      - 7053:7053
      - 9443:9443
    networks:
      - local
  {% if org.keystores_initialized %}
    depends_on: 
      - ca.gov
  {% else %}
    depends_on: 
      - gov_nodes_initializer
  {% endif %}
{% endif %}

  peer.{{ org.key }}:
    container_name: peer.{{ org.key }}
    image: hyperledger/fabric-peer:2.4.4
    labels:
      service: hyperledger-fabric
    environment:
      - FABRIC_CFG_PATH=/etc/hyperledger/peercfg
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variables
      - CORE_PEER_ID=peer.{{ org.key }}
      - CORE_PEER_ADDRESS=peer.{{ org.key }}:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer.{{ org.key }}:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer.{{ org.key }}:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer.{{ org.key }}:7051
      - CORE_PEER_LOCALMSPID={{ org.msp_id }}
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_OPERATIONS_LISTENADDRESS=peer.{{ org.key }}:9444
      - CORE_METRICS_PROVIDER=prometheus
      - CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG={"peername":"peer.{{ org.key }}"}
      - CORE_CHAINCODE_EXECUTETIMEOUT=300s
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=voting_fabric 
    working_dir: /root
    command: sh -c 'DATA_PATH=/etc/hyperledger/fabric COMMAND="peer node start" /start-node.sh'
    volumes:
      - ./shell/start-node.sh:/start-node.sh
      - ./config/peer:/etc/hyperledger/peercfg
      - ./data/{{ org.key }}/peer:/etc/hyperledger/fabric
      - ./data/{{ org.key }}/peer/production:/var/hyperledger/production
      - /var/run:/var/run
    ports:
      - "{{ org.peer_port }}:7051"
      - "{{ org.peer_operations_port }}:9444"
    networks:
      - local
{% if org.keystores_initialized %}
    depends_on:
      - ca.{{ org.key }}
{% else %}
    depends_on: 
      - {{ org.key }}_nodes_initializer
{% endif %}

{% endfor %}

{% if not channel_initialized %}
  channel_initializer:
    build:
      dockerfile: Dockerfile.alpine
    environment:
      - FABRIC_BIN_PATH=/fabric/bin
    command: sh -c '/shell/create-channel.sh'
    volumes:
      - ./config:/config
      - ./data:/data
      - ./shell:/shell
      - ${FABRIC_BIN_PATH}:/fabric/bin
      - ../chaincode:/chaincode
    container_name: channel_initializer
    networks:
      - local
    depends_on: 
      - orderer.gov
      - peer.gov

{% if "rev" in orgs %}
  add_rev_org:
    build:
      dockerfile: Dockerfile.alpine
    environment:
      - FABRIC_BIN_PATH=/fabric/bin
      - ORG=rev
      - MSP_ID=Revolutionaries
    command: sh -c '/shell/add-org.sh'
    volumes:
      - ./config:/config
      - ./data:/data
      - ./shell:/shell
      - ${FABRIC_BIN_PATH}:/fabric/bin
    container_name: add_rev_org
    networks:
      - local
    depends_on: 
      - channel_initializer
{% endif %}

{# TODO: add conservatives to channel #}

{% endif %}
